(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{404:function(t,s,n){"use strict";n.r(s);var a=n(28),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"linux安装nginx正确方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux安装nginx正确方式"}},[t._v("#")]),t._v(" Linux安装Nginx正确方式")]),t._v(" "),n("blockquote",[n("p",[t._v("本文出处"),n("a",{attrs:{href:"https://shenyifengtk.github.io/2019/07/19/Linux%E5%AE%89%E8%A3%85Nginx%E6%AD%A3%E7%A1%AE%E6%96%B9%E5%BC%8F/",target:"_blank",rel:"noopener noreferrer"}},[t._v("shenyifengtk.github.io"),n("OutboundLink")],1),t._v(" 如有转载，请说明出处")])]),t._v(" "),n("p",[t._v("如果你和我一样，作为一个苦逼的Java后台除了实现实现一大堆项目功能，还要兼顾项目的部署，运维工作。在新的服务器上安装新Nginx，在安装之前看下网上的教程,面对五花八门的教程，各式各样的安装方法，心里总会嘀咕什么方式才是最好的，或者说什么方法才是最适合自己的？下面我们一起来分析Nginx各种安装方式，分别适合于那种情况。")]),t._v(" "),n("h3",{attrs:{id:"使用系统二进制源方式安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用系统二进制源方式安装"}},[t._v("#")]),t._v(" 使用系统二进制源方式安装")]),t._v(" "),n("p",[t._v("在Ubuntu/Debian系")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n")])])]),n("p",[t._v("或者RedHat/CentOS系")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx \n")])])]),n("p",[t._v("这种方式最简单的，最快捷的方式，但是不是最好的方式，下面我们来说这种主要问题。")]),t._v(" "),n("p",[t._v("优点")]),t._v(" "),n("ul",[n("li",[t._v("所有安装二进制依赖已经处理好了，不用担心兼容性问题，开箱即用")]),t._v(" "),n("li",[t._v("Nginx的连接配置，用户权限这个都不用处理，已经帮你写好这块了")]),t._v(" "),n("li",[t._v("不用担心Nginx Bug维护升级问题，直接获取最新系统就可以了")]),t._v(" "),n("li",[t._v("卸载简单，直接一个命令即可")]),t._v(" "),n("li",[t._v("日志维护简单，自动截断当天日志，压缩保存")])]),t._v(" "),n("p",[t._v("缺点")]),t._v(" "),n("ul",[n("li",[t._v("不能自主选择安装版本")]),t._v(" "),n("li",[t._v("不能自主选择编译的模块")]),t._v(" "),n("li",[t._v("扩展功能变得很麻烦，需要重新编译")]),t._v(" "),n("li",[t._v("目类结构复杂，配置文件在"),n("code",[t._v("/etc/")]),t._v("下，部署文件在"),n("code",[t._v("/var/www")])]),t._v(" "),n("li",[t._v("重启服务，修改配置都需要root权限")]),t._v(" "),n("li",[t._v("性能差一点编译安装")])]),t._v(" "),n("p",[t._v("如果你是一个Linux新手，绝对推荐使用这中方式安装，不用考虑编译依赖问题，直接安装完就可以使用。但是如果你这个服务器是用于生产环境正在开发逐步完善的过程，不推荐使用这种方式。将来可能会添加第三方模块，到时肯定要编译安装(下面会说到)。在重启服务器的时候，不要使用root用户，而是使用"),n("code",[t._v("sudo")]),t._v("短暂获取root。如果你这条服务器都是用来部署一些静态文件，主要做一些web空间，平常主要用ftp工具部署文件，用这种方式肯定没什么问题的。")]),t._v(" "),n("h3",{attrs:{id:"编译安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译安装"}},[t._v("#")]),t._v(" 编译安装")]),t._v(" "),n("p",[t._v("优缺点，我就不写了，基本就是上面的颠倒过来就可以了。使用这种方法安装，都必须懂一点Linux编译知识，Linux中度用户才可以驾驭。我看见网上大多数教程，都是将编译依赖直接装在"),n("code",[t._v("/usr/local/")]),t._v("这种方式并不好。如果将来我们要卸载这些依赖，发现非常麻烦。并不是直接在目类下直接删除就可以完事的，有些Linux发行版本，会将安装文件，写入配置文件中，这些配置文件有不知道哪里找。如果依赖版本影响到其他软件，怎么处理版本问题。我们只想安装Nginx，结果延申出一大堆问题。")]),t._v(" "),n("h5",{attrs:{id:"编译环境准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译环境准备"}},[t._v("#")]),t._v(" 编译环境准备")]),t._v(" "),n("p",[t._v("在开始之前，保证你的Linux准备了gcc、make、wget,g++ 这些软件。 创建一个目类用来存放下载文件,进入目录中下载依赖库源文件")]),t._v(" "),n("p",[t._v("下载"),n("code",[t._v("openssl")]),t._v("主要用于ssl模块加密，支持htps")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://www.openssl.org/source/openssl-1.0.2s.tar.gz\n")])])]),n("p",[t._v("下载"),n("code",[t._v("pcre")]),t._v("来实现对地址重定向，地址重写功能和localtion指令以及正则表达式的支持")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://ftp.pcre.org/pub/pcre/pcre-8.43.tar.gz\n")])])]),n("p",[t._v("下载"),n("code",[t._v("zlib")]),t._v(" gzip压缩模块")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://zlib.net/zlib-1.2.11.tar.gz\n")])])]),n("p",[t._v("下载Nginx")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://nginx.org/download/nginx-1.20.1.tar.gz\n")])])]),n("p",[t._v("使用tar 解压所有的文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" *.tar.gz "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" -n1 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xzvf  \n")])])]),n("h5",{attrs:{id:"编译选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译选项"}},[t._v("#")]),t._v(" 编译选项")]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("./configure")]),t._v("设置各种Nginx参数的脚本，包括源和配置文件的路径，编译器选项，连接处理方法和模块列表。该脚本通过创建编译代码和安装Nginx开源所需的Makefile来完成。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("参数")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("--prefix="),n("PATH")]),t._v(" "),n("td",[t._v("Nginx安装目录，以及有其他配置脚本选项的路径设置的所有相对路径的基本位置。默认值"),n("code",[t._v("/usr/local/nginx")])])]),t._v(" "),n("tr",[n("td",[t._v("--sbin-path=<PATH")]),t._v(" "),n("td",[t._v("Nginx二进制执行文件的名称，默认值:"),n("code",[t._v("<prefix>/sbin/nginx")])])]),t._v(" "),n("tr",[n("td",[t._v("--conf-path="),n("PATH")]),t._v(" "),n("td",[t._v("Nginx配置文件的名称。但是，您可以通过在nginx命令行上使用选项指定其他文件来始终在启动时覆盖此值。默认值："),n("code",[t._v("<prefix> conf / nginx.conf-c <FILENAME>")])])]),t._v(" "),n("tr",[n("td",[t._v("--pid-path="),n("PATH")]),t._v(" "),n("td",[t._v("nginx.pid文件的名称，用于存储nginx主进程的进程ID 。安装后，可以使用Nginx配置文件中的pid指令更改文件名的路径。默认值："),n("code",[t._v("<prefix> /logs/nginx.pid")])])]),t._v(" "),n("tr",[n("td",[t._v("--error-log-path="),n("PATH")]),t._v(" "),n("td",[t._v("error，warn和诊断数据的日志文件的名称。安装后，可以使用Nginx配置文件中的error_log指令更改文件名。默认值："),n("code",[t._v("<prefix> /logs/error.log")])])]),t._v(" "),n("tr",[n("td",[t._v("--http-log-path="),n("PATH")]),t._v(" "),n("td",[t._v("HTTP服务器请求的主日志文件的名称。安装后，始终可以使用Nginx配置文件中的access_log指令更改文件名。默认值："),n("code",[t._v("<prefix> /logs/access.log")])])]),t._v(" "),n("tr",[n("td",[t._v("--user="),n("NAME")],1),t._v(" "),n("td",[t._v("Nginx运行进程的拥有者。安装后，可以使用Nginx配置文件中的user指令更改名称。默认："),n("code",[t._v("nobody")])])]),t._v(" "),n("tr",[n("td",[t._v("--group=name")]),t._v(" "),n("td",[t._v("nginx运行进程的拥有者用户组。安装后，可以使用NGINX配置文件中的user指令更改名称。默认值：--user选项设置的值")])]),t._v(" "),n("tr",[n("td",[t._v("--with-pcre="),n("PATH")]),t._v(" "),n("td",[t._v("PCRE库源代码的路径，这是位置指令和Rewrite模块中正则表达式支持所必需的")])]),t._v(" "),n("tr",[n("td",[t._v("--with-pcre-jit")]),t._v(" "),n("td",[t._v("使用“即时编译”支持（pcre_jit指令）构建PCRE库")])]),t._v(" "),n("tr",[n("td",[t._v("--with-zlib="),n("PATH")]),t._v(" "),n("td",[t._v("zlib库的源代码路径，Gzip模块需要该路径")])]),t._v(" "),n("tr",[n("td",[t._v("--with-http_ssl_modul")]),t._v(" "),n("td",[t._v("启用HTTPS支持")])]),t._v(" "),n("tr",[n("td",[t._v("--with-http_v2_module")]),t._v(" "),n("td",[t._v("开启 HTTP/2请求支持")])])])]),t._v(" "),n("p",[t._v("还要太多编译参数我就不一一列举，有兴趣的同学可以自己去 "),n("a",{attrs:{href:"https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/#sources",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx官网"),n("OutboundLink")],1),t._v("参看")]),t._v(" "),n("h5",{attrs:{id:"编译安装-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译安装-2"}},[t._v("#")]),t._v(" 编译安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("./configure "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-openssl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/openssl-1.0.2s "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-pcre"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pcre-8.43 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-zlib"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/zlib-1.2.11 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-pcre-jit --user"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/home/admin/nginx "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-http_ssl_module "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   --with-http_v2_module \n复制代码\n")])])]),n("p",[t._v("输出以下信息，说明依赖没问题")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Configuration summary\n  + using PCRE library: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pcre-8.43\n  + using OpenSSL library: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/openssl-1.0.2s\n  + using zlib library: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/zlib-1.2.11\n  \n  nginx path prefix: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx"')]),t._v("\n  nginx binary file: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/sbin/nginx"')]),t._v("\n  nginx modules path: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/modules"')]),t._v("\n  nginx configuration prefix: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/conf"')]),t._v("\n  nginx configuration file: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/conf/nginx.conf"')]),t._v("\n  nginx pid file: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/logs/nginx.pid"')]),t._v("\n  nginx error log file: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/logs/error.log"')]),t._v("\n  nginx http access log file: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/admin/nginx/logs/access.log"')]),t._v("\n  nginx http client request body temporary files: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client_body_temp"')]),t._v("\n  nginx http proxy temporary files: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proxy_temp"')]),t._v("\n  nginx http fastcgi temporary files: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fastcgi_temp"')]),t._v("\n  nginx http uwsgi temporary files: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uwsgi_temp"')]),t._v("\n  nginx http scgi temporary files: "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scgi_temp"')]),t._v("\n复制代码\n")])])]),n("p",[t._v("编译")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),n("p",[t._v("安装")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),n("h5",{attrs:{id:"设置权限"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置权限"}},[t._v("#")]),t._v(" 设置权限")]),t._v(" "),n("p",[t._v("因为Linux设置普通用户，不能占用1024一下的端口，直接启动nginx会出现权限不足的错误。将nginx分配给root用户，在分配特殊权限。")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" root nginx\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" u+s nginx\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);