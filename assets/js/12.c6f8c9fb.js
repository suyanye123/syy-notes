(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{382:function(t,s,a){"use strict";a.r(s);var r=a(28),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h2",{attrs:{id:"常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[t._v("#")]),t._v(" 常用API")]),t._v(" "),a("h2",{attrs:{id:"拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[t._v("#")]),t._v(" 拓展")]),t._v(" "),a("h3",{attrs:{id:"_1-将一个项目同时托管至gitee和github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-将一个项目同时托管至gitee和github"}},[t._v("#")]),t._v(" 1.将一个项目同时托管至gitee和github")]),t._v(" "),a("h5",{attrs:{id:"方法1-直接修改git文件中config文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法1-直接修改git文件中config文件"}},[t._v("#")]),t._v(" 方法1：直接修改git文件中config文件")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nurl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" git@gitee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("yourAccount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\nfetch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("refs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("heads"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("refs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("remotes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("origin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\nurl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" git@github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("yourAccount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])]),a("p",[t._v("如果不想用命令行，可以直接编辑该文件，添加对应的remote及url即可")]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"方法2-使用命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法2-使用命令行"}},[t._v("#")]),t._v(" 方法2：使用命令行")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先添加第一个仓库")]),t._v("\ngit remote add origin git@gitee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("yourAccount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再添加第二个仓库：")]),t._v("\ngit remote set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("add origin git@github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("yourAccount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果还有其他，则可以像添加第二个一样继续添加其他仓库。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//然后使用下面命令提交：")]),t._v("\ngit push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("all\n")])])]),a("h3",{attrs:{id:"_2-githooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-githooks"}},[t._v("#")]),t._v(" 2.githooks")]),t._v(" "),a("p",[t._v("Git Hooks 就是在 Git 执行特定事件（如commit、push、receive等）时触发运行的脚本，类似于“钩子函数”，没有设置可执行的钩子将被忽略。")]),t._v(" "),a("p",[t._v("在项目的 .git/hooks 目录中，有一些 .sample 结尾的钩子示例脚本，如果想启用对应的钩子，只需手动删除后缀，即可。（删除某一个 hook 的后缀 .sample 即可启用该 hook 脚本，默认是不启用的。）")]),t._v(" "),a("p",[t._v("【但是，我们一般不去改动 .git/hooks 里面的文件，因为我们使用 husky 】")]),t._v(" "),a("p",[t._v("lint-staged，一个仅仅过滤出 Git 代码暂存区文件(被 git add 的文件)的工具；这个很实用，因为我们如果对整个项目的代码做一个检查，可能耗时很长，如果是老项目，要对之前的代码做一个代码规范检查并修改的话，这可能就麻烦了呀，可能导致项目改动很大。")]),t._v(" "),a("p",[t._v("所以这个 lint-staged，对团队项目和开源项目来说，是一个很好的工具，它是对个人要提交的代码的一个规范和约束。")]),t._v(" "),a("p",[t._v("husky v4版本"),a("code",[t._v("package.json")]),t._v(" 文件中配置 如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"src/**/*.{js,vue}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"husky-升级到-v6-后配置变动-更新至2021年"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky-升级到-v6-后配置变动-更新至2021年"}},[t._v("#")]),t._v(" husky 升级到 v6 后配置变动（更新至2021年）")]),t._v(" "),a("p",[t._v("第 1 步： "),a("code",[t._v("npx husky-init && yarn")])]),t._v(" "),a("p",[t._v("第 2 步：\n修改已自动生成的 ./husky/pre-commit 钩子")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("#!/bin/sh\n. "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(dirname "')]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")/_/husky.sh"')]),t._v("\n\nyarn lint-staged --verbose\n")])])]),a("p",[t._v("创建 ./husky/commit-msg 钩子 "),a("code",[t._v('npx husky add .husky/commit-msg "npm test"')]),t._v("\n并修改为")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("#!/bin/sh\n. "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(dirname "')]),t._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")/_/husky.sh"')]),t._v("\n\nyarn commitlint --config .commitlintrc.js --edit $"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("（自行新建commit-msg文件，会还需要设置可执行文件模式，所以采用先 "),a("code",[t._v("husky add")]),t._v(" 再手动修改的方式）")]),t._v(" "),a("p",[t._v("第 3 步：清理 package.json 中 husky 字段内容")]),t._v(" "),a("p",[t._v("PS：仅删除husky配置，"),a("code",[t._v("lint-staged")]),t._v("配置不用删除， 参考 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/356924268",target:"_blank",rel:"noopener noreferrer"}},[t._v(" husky更新配置 "),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);